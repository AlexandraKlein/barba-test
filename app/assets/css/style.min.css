/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
.flex-both-align{-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.flex-both-align,.flex-row{display:-ms-flexbox;display:flex}.flex-row{-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-line-pack:center;align-content:center;-ms-flex-align:start;align-items:flex-start}.vertical-align{position:relative;top:50%;transform:translateY(-50%)}.align-both,article .next .copy{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%}body{font:300 16px Helvetica Neue,Helvetica,Arial}a{color:#fff}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}article img{width:100%}article .copy{padding:10% 20%}article .copy h2{font-size:38px}article .copy p{line-height:1.5}article .next{position:relative;height:20vw;overflow:hidden;transform:translateZ(0);transition:all .5s ease-out}article .next .copy{width:100%;text-align:center;color:#fff;z-index:1;transition:all .5s ease-out}article .next .copy a{font-size:20px}article .next img{position:relative}article .next:after{content:"";position:absolute;top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,.6);transition:all .5s ease-out}.transition-out{opacity:0;transition:all 1s ease-out}.transition-out article>img{opacity:0;transition:all .5s ease-out}.transition-out .content>.copy{animation:b .25s ease-out forwards}.transition-out .next{height:auto;overflow:visible}.transition-out .next .copy,.transition-out .next:after{opacity:0}.transition-in{opacity:0;transition:all 1s ease-out}.transition-in .content>.copy h2,.transition-in .content>.copy p{animation:a .25s ease-out forwards;opacity:0}.transition-in .content>.copy h2:first-child,.transition-in .content>.copy p:first-child{animation-delay:.1s}.transition-in .content>.copy h2:nth-child(2),.transition-in .content>.copy p:nth-child(2){animation-delay:.2s}.transition-in .content>.copy h2:nth-child(3),.transition-in .content>.copy p:nth-child(3){animation-delay:.3s}.transition-in .content>.copy h2:nth-child(4),.transition-in .content>.copy p:nth-child(4){animation-delay:.4s}.transition-in .content>.copy h2:nth-child(5),.transition-in .content>.copy p:nth-child(5){animation-delay:.5s}.transition-in .content>.copy h2:nth-child(6),.transition-in .content>.copy p:nth-child(6){animation-delay:.6s}.transition-in .content>.copy h2:nth-child(7),.transition-in .content>.copy p:nth-child(7){animation-delay:.7s}.transition-in .content>.copy h2:nth-child(8),.transition-in .content>.copy p:nth-child(8){animation-delay:.8s}.transition-in .content>.copy h2:nth-child(9),.transition-in .content>.copy p:nth-child(9){animation-delay:.9s}.transition-in .content>.copy h2:nth-child(10),.transition-in .content>.copy p:nth-child(10){animation-delay:1s}.transition-in .content>.copy h2:nth-child(11),.transition-in .content>.copy p:nth-child(11){animation-delay:1.1s}.transition-in .content>.copy h2:nth-child(12),.transition-in .content>.copy p:nth-child(12){animation-delay:1.2s}.transition-in .content>.copy h2:nth-child(13),.transition-in .content>.copy p:nth-child(13){animation-delay:1.3s}.transition-in .content>.copy h2:nth-child(14),.transition-in .content>.copy p:nth-child(14){animation-delay:1.4s}.transition-in .content>.copy h2:nth-child(15),.transition-in .content>.copy p:nth-child(15){animation-delay:1.5s}.transition-in .content>.copy h2:nth-child(16),.transition-in .content>.copy p:nth-child(16){animation-delay:1.6s}.transition-in .content>.copy h2:nth-child(17),.transition-in .content>.copy p:nth-child(17){animation-delay:1.7s}.transition-in .content>.copy h2:nth-child(18),.transition-in .content>.copy p:nth-child(18){animation-delay:1.8s}.transition-in .content>.copy h2:nth-child(19),.transition-in .content>.copy p:nth-child(19){animation-delay:1.9s}.transition-in .content>.copy h2:nth-child(20),.transition-in .content>.copy p:nth-child(20){animation-delay:2s}.transition-in .content>.copy h2:nth-child(21),.transition-in .content>.copy p:nth-child(21){animation-delay:2.1s}.transition-in .content>.copy h2:nth-child(22),.transition-in .content>.copy p:nth-child(22){animation-delay:2.2s}.transition-in .content>.copy h2:nth-child(23),.transition-in .content>.copy p:nth-child(23){animation-delay:2.3s}.transition-in .content>.copy h2:nth-child(24),.transition-in .content>.copy p:nth-child(24){animation-delay:2.4s}.transition-in .content>.copy h2:nth-child(25),.transition-in .content>.copy p:nth-child(25){animation-delay:2.5s}.transition-in .content>.copy h2:nth-child(26),.transition-in .content>.copy p:nth-child(26){animation-delay:2.6s}.transition-in .content>.copy h2:nth-child(27),.transition-in .content>.copy p:nth-child(27){animation-delay:2.7s}.transition-in .content>.copy h2:nth-child(28),.transition-in .content>.copy p:nth-child(28){animation-delay:2.8s}.transition-in .content>.copy h2:nth-child(29),.transition-in .content>.copy p:nth-child(29){animation-delay:2.9s}.transition-in .content>.copy h2:nth-child(30),.transition-in .content>.copy p:nth-child(30){animation-delay:3s}.transition-in .content>.copy h2:nth-child(31),.transition-in .content>.copy p:nth-child(31){animation-delay:3.1s}.transition-in .content>.copy h2:nth-child(32),.transition-in .content>.copy p:nth-child(32){animation-delay:3.2s}.transition-in .content>.copy h2:nth-child(33),.transition-in .content>.copy p:nth-child(33){animation-delay:3.3s}.transition-in .content>.copy h2:nth-child(34),.transition-in .content>.copy p:nth-child(34){animation-delay:3.4s}.transition-in .content>.copy h2:nth-child(35),.transition-in .content>.copy p:nth-child(35){animation-delay:3.5s}.transition-in .content>.copy h2:nth-child(36),.transition-in .content>.copy p:nth-child(36){animation-delay:3.6s}.transition-in .content>.copy h2:nth-child(37),.transition-in .content>.copy p:nth-child(37){animation-delay:3.7s}.transition-in .content>.copy h2:nth-child(38),.transition-in .content>.copy p:nth-child(38){animation-delay:3.8s}.transition-in .content>.copy h2:nth-child(39),.transition-in .content>.copy p:nth-child(39){animation-delay:3.9s}.transition-in .next{animation:a .25s ease-out}@keyframes a{0%{opacity:0;transform:translate3d(0,10%,0)}to{transform:translateZ(0);opacity:1}}@keyframes b{0%{transform:scale(1) translateZ(0);opacity:1}to{transform:scale(.8) translate3d(0,-10%,0);opacity:0}}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
